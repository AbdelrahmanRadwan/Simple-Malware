INCLUDE Irvine16.inc

.DATA

RndFile BYTE "Tnt\", 15 dup(?)
msg1 DB "Press 1 to generate random files:", 0
msg2 DB "Press 2 to delete all files with .exe extension:", 0
Tnt DB "Generating...", 0
des DB "Destroying your Files.." ,0
tbd DB "Tnt\*.exe", 0
fileToDelete BYTE "Tnt\", 15 dup(1)
DTA DB 128 DUP(0)

.CODE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Main procedure
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
main PROC
	MOV AX, @data;#?Hold data
	MOV DS, AX;#2Move data to the data segment
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;Hold choices
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	MOV DX, OFFSET msg1
	CALL writestring
	CALL crlf
	CALL crlf
	MOV DX, OFFSET msg2 
	CALL writestring
	CALL crlf
	CALL crlf
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;Take input from user and take decission based on the char input
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CALL readchar
	CMP AL, '1'
	JE Gene
	JMP Dele
	Gene: 
		CALL Generate
		JMP don
	Dele:
		CALL deleteExe
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;Finish
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	don:
exit
main ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Delete procedure
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
deleteExe PROC 
	MOV DX, OFFSET DTA ;#? resting 
	MOV AH, 1Ah
	INT 21h
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Continue search label 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ContinueSearch : 
	MOV AH, 4Eh
	MOV CX , 00h 
	MOV DX, OFFSET tbd
	INT 21h
	JC Quit
	MOV BX , OFFSET fileTodelete + 4 
	MOV SI , OFFSET DTA + 30
	CALL copy 
	MOV DX , OFFSET filetoDelete
	CALL crlf
	CALL WriteString
	CALL crlf
	CALL deleteFile 
	JMP ContinueSearch
Quit:
	RET
deleteExe ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Copy procedure
;; parameters:bx distation offset ; si source  
;;; returns: void  changesMade to destination String
;;; defination: copy from ptr to source into destination with a count
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
copy PROC USES SI  BX 
	MOV CX , 10
L1 :
	MOV AL , BYTE PTR [SI]
	CMP AL , 0
	JE quit   
	MOV BYTE PTR [BX] , AL 
	ADD BX  , TYPE BYTE 
	ADD SI  ,TYPE BYTE 
	LOOP L1
quit :
	MOV BYTE PTR [BX] , 0
	RET
copy ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Delete file procedure
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DeleteFile PROC 
	PUSH DX 
	MOV DX , OFFSET des
	CALL writestring
	POP DX 
	MOV AH,41h ;#2 delete file
	INT 21h
	RET 
deleteFile ENDP 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Create file procedure
;3CH is:
;a functionCreate file.
;Create a new file or set the length of existing file to 0 bytes. 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
CreateFile PROC
	MOV AH, 3Ch 
	MOV CX, 00h
	INT 21h 
	RET
CreateFile ENDP

CloseFile proc

	MOV AH,3Eh ;#2Close file handle.
	;MOV BX, OFFSET RndFile;#?why?
	INT 21h;#2return dos
	ret
CloseFile endp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Generate files procedure
;random32:
;Generates a 32-bit pseudorandom integer in the range 0 to FFFFFFFFh
;randomize:
;Seeds the random number generator with a unique value.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Generate PROC
	CALL clrscr
	MOV dx, offset Tnt
	CALL writestring
	CALL crlf
	CALL randomize
	MOV CX, 0
L:
	CALL random32
	CMP AX, 0
	JG good ; Jump if value in ax is positive
	NEG AX
good:
	MOV BX, 10;#4 base, we divide by it
	MOV SI, 4;#4 first position after the "Tnt/" of RndFile
	opt:
		CMP AX, 10000;#4not 5 digits
		JAE bra
		IMUL AX, 10
	JMP opt
bra:
	W:
		MOV DX, 0
		DIV BX ;#3Divide number (AX) by base (BX)
		ADD DL, 48;#3char
		MOV RndFile[SI], DL
		INC SI
		CMP AX, 0
		JE done
	JMP W
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Add the suffix .exe to the file 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
done:
	;MOV CX, 01h;#4why ?			
	;Add .
	MOV DL, '.'
	MOV RndFile[SI], DL
	;Add e
	INC SI
	MOV DL, 'e'
	MOV RndFile[SI], DL
	;Add x
	INC SI
	MOV DL, 'x'
	MOV RndFile[SI], DL
	;Add e
	INC SI
	MOV DL, 'e'
	MOV RndFile[SI],DL;#?Copy the name to DL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	MOV DX, OFFSET RndFile
	CALL CreateFile;#5Create a file called by the value of DX
	CALL CloseFile ;#Close the created file
	JMP L
	RET
Generate ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
END main