Microsoft (R) Macro Assembler Version 10.00.30319.01	    12/26/15 14:56:31
RealMode.asm						     Page 1 - 1


				INCLUDE Irvine16.inc
			      C ; Irvine16.inc - Include file for programs using
			      C ; the Irvine16.lib (Real-address mode library).
			      C 
			      C ; Last update: 7/29/05
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 0000				.DATA

 0000 54 6E 74 5C		RndFile BYTE "Tnt\", 15 dup(?)
       000F [
        00
       ]
 0013 50 72 65 73 73 20		msg1 DB "Press 1 to generate random files:", 0
       31 20 74 6F 20 67
       65 6E 65 72 61 74
       65 20 72 61 6E 64
       6F 6D 20 66 69 6C
       65 73 3A 00
 0035 50 72 65 73 73 20		msg2 DB "Press 2 to delete all files with .exe extension:", 0
       32 20 74 6F 20 64
       65 6C 65 74 65 20
       61 6C 6C 20 66 69
       6C 65 73 20 77 69
       74 68 20 2E 65 78
       65 20 65 78 74 65
       6E 73 69 6F 6E 3A
       00
 0066 47 65 6E 65 72 61		Tnt DB "Generating...", 0
       74 69 6E 67 2E 2E
       2E 00
 0074 44 65 73 74 72 6F		des DB "Destroying your Files.." ,0
       79 69 6E 67 20 79
       6F 75 72 20 46 69
       6C 65 73 2E 2E 00
 008C 54 6E 74 5C 2A 2E		tbd DB "Tnt\*.exe", 0
       65 78 65 00
 0096 54 6E 74 5C		fileToDelete BYTE "Tnt\", 15 dup(1)
       000F [
        01
       ]
 00A9  0080 [			DTA DB 128 DUP(0)
        00
       ]

 0000				.CODE

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;Main procedure
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000				main PROC
 0000  B8 ---- R			MOV AX, @data;#?Hold data
 0003  8E D8				MOV DS, AX;#2Move data to the data segment
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					;Hold choices
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0005  BA 0013 R			MOV DX, OFFSET msg1
 0008  E8 0000 E			CALL writestring
 000B  E8 0000 E			CALL crlf
 000E  E8 0000 E			CALL crlf
 0011  BA 0035 R			MOV DX, OFFSET msg2 
 0014  E8 0000 E			CALL writestring
 0017  E8 0000 E			CALL crlf
 001A  E8 0000 E			CALL crlf
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					;Take input from user and take decission based on the char input
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 001D  E8 0000 E			CALL readchar
 0020  3C 31				CMP AL, '1'
 0022  74 02				JE Gene
 0024  EB 05				JMP Dele
 0026					Gene: 
 0026  E8 006C					CALL Generate
 0029  EB 03					JMP don
 002B					Dele:
 002B  E8 0004					CALL deleteExe
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					;Finish
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 002E					don:
				exit
 0032				main ENDP
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;Delete procedure
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0032				deleteExe PROC 
 0032  BA 00A9 R			MOV DX, OFFSET DTA ;#? resting 
 0035  B4 1A				MOV AH, 1Ah
 0037  CD 21				INT 21h
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;Continue search label 
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0039				ContinueSearch : 
 0039  B4 4E				MOV AH, 4Eh
 003B  B9 0000				MOV CX , 00h 
 003E  BA 008C R			MOV DX, OFFSET tbd
 0041  CD 21				INT 21h
 0043  72 1A				JC Quit
 0045  BB 009A R			MOV BX , OFFSET fileTodelete + 4 
 0048  BE 00C7 R			MOV SI , OFFSET DTA + 30
 004B  E8 0012				CALL copy 
 004E  BA 0096 R			MOV DX , OFFSET filetoDelete
 0051  E8 0000 E			CALL crlf
 0054  E8 0000 E			CALL WriteString
 0057  E8 0000 E			CALL crlf
 005A  E8 001E				CALL deleteFile 
 005D  EB DA				JMP ContinueSearch
 005F				Quit:
 005F  C3				RET
 0060				deleteExe ENDP
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;Copy procedure
				;; parameters:bx distation offset ; si source  
				;;; returns: void  changesMade to destination String
				;;; defination: copy from ptr to source into destination with a count
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0060				copy PROC USES SI  BX 
 0062  B9 000A				MOV CX , 10
 0065				L1 :
 0065  8A 04				MOV AL , BYTE PTR [SI]
 0067  3C 00				CMP AL , 0
 0069  74 0A				JE quit   
 006B  88 07				MOV BYTE PTR [BX] , AL 
 006D  83 C3 01				ADD BX  , TYPE BYTE 
 0070  83 C6 01				ADD SI  ,TYPE BYTE 
 0073  E2 F0				LOOP L1
 0075				quit :
 0075  C6 07 00				MOV BYTE PTR [BX] , 0
					RET
 007B				copy ENDP
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;Delete file procedure
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 007B				DeleteFile PROC 
 007B  52				PUSH DX 
 007C  BA 0074 R			MOV DX , OFFSET des
 007F  E8 0000 E			CALL writestring
 0082  5A				POP DX 
 0083  B4 41				MOV AH,41h ;#2 delete file
 0085  CD 21				INT 21h
 0087  C3				RET 
 0088				deleteFile ENDP 
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;Create file procedure
				;3CH is:
				;a functionCreate file.
				;Create a new file or set the length of existing file to 0 bytes. 
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0088				CreateFile PROC
 0088  B4 3C				MOV AH, 3Ch 
 008A  B9 0000				MOV CX, 00h
 008D  CD 21				INT 21h 
 008F  C3				RET
 0090				CreateFile ENDP

 0090				CloseFile proc

 0090  B4 3E				MOV AH,3Eh ;#2Close file handle.
					;MOV BX, OFFSET RndFile;#?why?
 0092  CD 21				INT 21h;#2return dos
 0094  C3				ret
 0095				CloseFile endp
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;Generate files procedure
				;random32:
				;Generates a 32-bit pseudorandom integer in the range 0 to FFFFFFFFh
				;randomize:
				;Seeds the random number generator with a unique value.
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0095				Generate PROC
 0095  E8 0000 E			CALL clrscr
 0098  BA 0066 R			MOV dx, offset Tnt
 009B  E8 0000 E			CALL writestring
 009E  E8 0000 E			CALL crlf
 00A1  E8 0000 E			CALL randomize
 00A4  B9 0000				MOV CX, 0
 00A7				L:
 00A7  E8 0000 E			CALL random32
 00AA  83 F8 00				CMP AX, 0
 00AD  7F 02				JG good ; Jump if value in ax is positive
 00AF  F7 D8				NEG AX
 00B1				good:
 00B1  BB 000A				MOV BX, 10;#4 base, we divide by it
 00B4  BE 0004				MOV SI, 4;#4 first position after the "Tnt/" of RndFile
 00B7					opt:
 00B7  3D 2710					CMP AX, 10000;#4not 5 digits
 00BA  73 05					JAE bra
 00BC  6B C0 0A					IMUL AX, 10
 00BF  EB F6				JMP opt
 00C1				bra:
 00C1					W:
 00C1  BA 0000					MOV DX, 0
 00C4  F7 F3					DIV BX ;#3Divide number (AX) by base (BX)
 00C6  80 C2 30					ADD DL, 48;#3char
 00C9  88 94 0000 R				MOV RndFile[SI], DL
 00CD  46					INC SI
 00CE  83 F8 00					CMP AX, 0
 00D1  74 02					JE done
 00D3  EB EC				JMP W
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;Add the suffix .exe to the file 
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00D5				done:
					;MOV CX, 01h;#4why ?			
					;Add .
 00D5  B2 2E				MOV DL, '.'
 00D7  88 94 0000 R			MOV RndFile[SI], DL
					;Add e
 00DB  46				INC SI
 00DC  B2 65				MOV DL, 'e'
 00DE  88 94 0000 R			MOV RndFile[SI], DL
					;Add x
 00E2  46				INC SI
 00E3  B2 78				MOV DL, 'x'
 00E5  88 94 0000 R			MOV RndFile[SI], DL
					;Add e
 00E9  46				INC SI
 00EA  B2 65				MOV DL, 'e'
 00EC  88 94 0000 R			MOV RndFile[SI],DL;#?Copy the name to DL
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00F0  BA 0000 R			MOV DX, OFFSET RndFile
 00F3  E8 FF92				CALL CreateFile;#5Create a file called by the value of DX
 00F6  E8 FF97				CALL CloseFile ;#Close the created file
 00F9  EB AC				JMP L
 00FB  C3				RET
 00FC				Generate ENDP
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				END main
Microsoft (R) Macro Assembler Version 10.00.30319.01	    12/26/15 14:56:31
RealMode.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CursorPosStruc . . . . . . . . .	 0002
  Ycoord . . . . . . . . . . . .	 0000	     Byte
  Xcoord . . . . . . . . . . . .	 0001	     Byte
ExtGetDskFreSpcStruc . . . . . .	 002C
  StructSize . . . . . . . . . .	 0000	     Word
  Level  . . . . . . . . . . . .	 0002	     Word
  SectorsPerCluster  . . . . . .	 0004	     DWord
  BytesPerSector . . . . . . . .	 0008	     DWord
  AvailableClusters  . . . . . .	 000C	     DWord
  TotalClusters  . . . . . . . .	 0010	     DWord
  AvailablePhysSectors . . . . .	 0014	     DWord
  TotalPhysSectors . . . . . . .	 0018	     DWord
  AvailableAllocationUnits . . .	 001C	     DWord
  TotalAllocationUnits . . . . .	 0020	     DWord
  Rsvd . . . . . . . . . . . . .	 0024	     DWord
FPU_ENVIRON  . . . . . . . . . .	 001C
  controlWord  . . . . . . . . .	 0000	     Word
  statusWord . . . . . . . . . .	 0004	     Word
  tagWord  . . . . . . . . . . .	 0008	     Word
  instrPtrLow  . . . . . . . . .	 000C	     Word
  opcodeAndInstrPtrHi  . . . . .	 0010	     DWord
  operandPtrLow  . . . . . . . .	 0014	     Word
  operandPtrHi . . . . . . . . .	 0018	     DWord
TimeRecord . . . . . . . . . . .	 0004
  hours  . . . . . . . . . . . .	 0000	     Byte
  minutes  . . . . . . . . . . .	 0001	     Byte
  seconds  . . . . . . . . . . .	 0002	     Byte
  hhss . . . . . . . . . . . . .	 0003	     Byte
VideoInfoStruc . . . . . . . . .	 0041
  supportedInfoPtr . . . . . . .	 0000	     DWord
  videoMode  . . . . . . . . . .	 0004	     Byte
  numCharColumns . . . . . . . .	 0005	     Word
  videoBufferLen . . . . . . . .	 0007	     Word
  videoBufferStartPtr  . . . . .	 0009	     Word
  cursors  . . . . . . . . . . .	 000B	     Word
  cursorStartLine  . . . . . . .	 001B	     Byte
  cursorEndLine  . . . . . . . .	 001C	     Byte
  activeDisplayPage  . . . . . .	 001D	     Byte
  adapterBasePortAddr  . . . . .	 001E	     Word
  currentRegister3B8or3D8  . . .	 0020	     Byte
  currentRegister3B9or3D9  . . .	 0021	     Byte
  numCharRows  . . . . . . . . .	 0022	     Byte
  characterScanHeight  . . . . .	 0023	     Word
  activeDisplayCode  . . . . . .	 0025	     Byte
  inactiveDisplayCode  . . . . .	 0026	     Byte
  numberOfColors . . . . . . . .	 0027	     Word
  numberOfVideoPages . . . . . .	 0029	     Byte
  numberOfScanLines  . . . . . .	 002A	     Word
  primaryCharBlock . . . . . . .	 002C	     Byte
  secondaryCharBlock . . . . . .	 002D	     Byte
  miscStateInfo  . . . . . . . .	 002E	     Byte
  videoMemAvail  . . . . . . . .	 0032	     Byte
  savePointerStateInfo . . . . .	 0033	     Byte


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0129	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0200	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 00FC	  Word	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 0090	  _TEXT	Length= 0005 Public STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
CreateFile . . . . . . . . . . .	P Near	 0088	  _TEXT	Length= 0008 Public STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
DeleteFile . . . . . . . . . . .	P Near	 007B	  _TEXT	Length= 000D Public STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Generate . . . . . . . . . . . .	P Near	 0095	  _TEXT	Length= 0067 Public STDCALL
  L  . . . . . . . . . . . . . .	L Near	 00A7	  _TEXT	
  good . . . . . . . . . . . . .	L Near	 00B1	  _TEXT	
  opt  . . . . . . . . . . . . .	L Near	 00B7	  _TEXT	
  bra  . . . . . . . . . . . . .	L Near	 00C1	  _TEXT	
  W  . . . . . . . . . . . . . .	L Near	 00C1	  _TEXT	
  done . . . . . . . . . . . . .	L Near	 00D5	  _TEXT	
GetCommandtail . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
copy . . . . . . . . . . . . . .	P Near	 0060	  _TEXT	Length= 001B Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0065	  _TEXT	
  quit . . . . . . . . . . . . .	L Near	 0075	  _TEXT	
deleteExe  . . . . . . . . . . .	P Near	 0032	  _TEXT	Length= 002E Public STDCALL
  ContinueSearch . . . . . . . .	L Near	 0039	  _TEXT	
  Quit . . . . . . . . . . . . .	L Near	 005F	  _TEXT	
main . . . . . . . . . . . . . .	P Near	 0000	  _TEXT	Length= 0032 Public STDCALL
  Gene . . . . . . . . . . . . .	L Near	 0026	  _TEXT	
  Dele . . . . . . . . . . . . .	L Near	 002B	  _TEXT	
  don  . . . . . . . . . . . . .	L Near	 002E	  _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0003h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@cmdline . . . . . . . . . . . .	Text   	 OFFSET __98765765cmdline
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
ACTION_CREATED_OPENED  . . . . .	Number	 0002h	 
ACTION_OPENED  . . . . . . . . .	Number	 0001h	 
ACTION_REPLACED_OPENED . . . . .	Number	 0003h	 
DTA  . . . . . . . . . . . . . .	Byte	 00A9	  _DATA	
FILE_CREATE  . . . . . . . . . .	Number	 0010h	 
FILE_OPEN  . . . . . . . . . . .	Number	 0001h	 
FILE_TRUNCATE  . . . . . . . . .	Number	 0002h	 
LIGHT_BLUE . . . . . . . . . . .	Number	 0009h	 
LIGHT_CYAN . . . . . . . . . . .	Number	 000Bh	 
LIGHT_GRAY . . . . . . . . . . .	Number	 0007h	 
LIGHT_GREEN  . . . . . . . . . .	Number	 000Ah	 
LIGHT_MAGENTA  . . . . . . . . .	Number	 000Dh	 
LIGHT_RED  . . . . . . . . . . .	Number	 000Ch	 
OPEN_ACCESS_READONLY . . . . . .	Number	 0000h	 
OPEN_ACCESS_READWRITE  . . . . .	Number	 0002h	 
OPEN_ACCESS_RO_NOMODLASTACCESS .	Number	 0004h	 
OPEN_ACCESS_WRITEONLY  . . . . .	Number	 0001h	 
OPEN_FLAGS_ALIAS_HINT  . . . . .	Number	 0400h	 
OPEN_FLAGS_COMMIT  . . . . . . .	Number	 4000h	 
OPEN_FLAGS_NOCRITERR . . . . . .	Number	 2000h	 
OPEN_FLAGS_NOINHERIT . . . . . .	Number	 0080h	 
OPEN_FLAGS_NO_BUFFERING  . . . .	Number	 0100h	 
OPEN_FLAGS_NO_COMPRESS . . . . .	Number	 0200h	 
OPEN_SHARE_COMPATIBLE  . . . . .	Number	 0000h	 
OPEN_SHARE_DENYNONE  . . . . . .	Number	 0040h	 
OPEN_SHARE_DENYREADWRITE . . . .	Number	 0010h	 
OPEN_SHARE_DENYREAD  . . . . . .	Number	 0030h	 
OPEN_SHARE_DENYWRITE . . . . . .	Number	 0020h	 
RndFile  . . . . . . . . . . . .	Byte	 0000	  _DATA	
Tnt  . . . . . . . . . . . . . .	Byte	 0066	  _DATA	
_A_ARCH  . . . . . . . . . . . .	Number	 0020h	 
_A_HIDDEN  . . . . . . . . . . .	Number	 0002h	 
_A_NORMAL  . . . . . . . . . . .	Number	 0000h	 
_A_RDONLY  . . . . . . . . . . .	Number	 0001h	 
_A_SYSTEM  . . . . . . . . . . .	Number	 0004h	 
_A_VOLID . . . . . . . . . . . .	Number	 0008h	 
black  . . . . . . . . . . . . .	Number	 0000h	 
blue . . . . . . . . . . . . . .	Number	 0001h	 
brown  . . . . . . . . . . . . .	Number	 0006h	 
cyan . . . . . . . . . . . . . .	Number	 0003h	 
des  . . . . . . . . . . . . . .	Byte	 0074	  _DATA	
exit . . . . . . . . . . . . . .	Text   	 .EXIT
fileToDelete . . . . . . . . . .	Byte	 0096	  _DATA	
gray . . . . . . . . . . . . . .	Number	 0008h	 
green  . . . . . . . . . . . . .	Number	 0002h	 
lightBlue  . . . . . . . . . . .	Number	 0009h	 
lightCyan  . . . . . . . . . . .	Number	 000Bh	 
lightGray  . . . . . . . . . . .	Number	 0007h	 
lightGreen . . . . . . . . . . .	Number	 000Ah	 
lightMagenta . . . . . . . . . .	Number	 000Dh	 
lightRed . . . . . . . . . . . .	Number	 000Ch	 
magenta  . . . . . . . . . . . .	Number	 0005h	 
msg1 . . . . . . . . . . . . . .	Byte	 0013	  _DATA	
msg2 . . . . . . . . . . . . . .	Byte	 0035	  _DATA	
red  . . . . . . . . . . . . . .	Number	 0004h	 
tbd  . . . . . . . . . . . . . .	Byte	 008C	  _DATA	
white  . . . . . . . . . . . . .	Number	 000Fh	 
yellow . . . . . . . . . . . . .	Number	 000Eh	 

	   0 Warnings
	   0 Errors
