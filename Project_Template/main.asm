
INCLUDE Irvine32.inc
;INCLUDE aa.asm
.data
rval dd ?
xval dword 26
yval dd 30
zval dword 40
;greeting1 BYTE "Welcome to the Encryption Demo program "
;BYTE "created by Kip Irvine.",0dh,0ah
;BYTE "If you wish to modify this program, please "
;BYTE "send me a copy.",0dh,0ah,0
.code
sumAB PROTO
mainf PROC

MOV EAX,10H
MOV EBX,10H
CALL DUMPREGS
CALL SUMAB
CALL DUMPREGS
;mov eax,10h
;.data
;xa dd 11h
;.code
;movzx bx,al
;call dumpregs

;CALL MSGBOXASK
;CALL READCHAR
;CHECKING FLAGS

;mov al,0aah
;movsx ecx,al
;movzx ebx,al
;call dumpregs

;mov ax,1000h
;inc ax
;call dumpregs
;dec ax
;call dumpregs

;mov eax,0
;sub eax,xval
;add eax,yval
;sub eax,zval
;call dumpregs
;mov rval,eax

;mov eax,0
;mov al,+127
;inc al
;call dumpregs

;mov eax,0
;mov al,-128
;sub al,1
;call dumpregs

;mov ecx,0
;mov cx,1
;sub cx,1
;call dumpregs



;mov ax,1034h
;call DumpRegs
;mov dx,ax
;call DumpRegs
;mov cx,zval[4]
;call DumpRegs
;mov cx,[zval+4]
;call DumpRegs
;mov cx,zval+4
;call DumpRegs
;mov cl,xval
;mov ebx,offset xval
;call DumpRegs




;mov eax,'abc'
;mov eax,16 + 16 mod 5
;call WriteInt
;prompt1 byte "press any key"
;and eax,000000ffh
;mov ebx,6h
;L: inc eax
;call DumpRegs
;cmp eax,5h
;jle L
;jmp z
;mov ecx,x
;mov edx,x
;mov eax, 0h ; eax is sum
;mov ecx, 10h ; ecx is i
;loop_start:
;add eax, ecx
;loop loop_start
;call DumpRegs

;z:	exit
exit
mainf ENDP

sumAB PROC

ADD EAX,EBX
RET

sumAB ENDP

END mainf
